// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address,a=al,b=bl,c=cl,d=dl,e=el,f=fl,g=gl,h=hl);

    Register(in=in,load=al,out=outReg1);
    Register(in=in,load=bl,out=outReg2);
    Register(in=in,load=cl,out=outReg3);
    Register(in=in,load=dl,out=outReg4);
    Register(in=in,load=el,out=outReg5);
    Register(in=in,load=fl,out=outReg6);
    Register(in=in,load=gl,out=outReg7);
    Register(in=in,load=hl,out=outReg8);

    Mux8Way16(a=outReg1,b=outReg2,c=outReg3,d=outReg4,e=outReg5,f=outReg6,g=outReg7,h=outReg8,sel=address,out=out);
}